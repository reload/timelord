name: "Build, push to GHCR and deploy image to GKE cluster"

on:
  push:
    tags: [ '*' ]

env:
  RELEASE_TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64 # Remember image in dockerfile should also support these platforms
          push: true
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.RELEASE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    env:
      GCP_PROJECT: reload-internal-alpha
      GKE_CLUSTER_ZONE: europe-west1-b
    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v3'

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDS }}'
    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'

    # Now you can run gcloud commands authenticated as the impersonated service account.
    - name: install config gcloud auth
      run: |
        gcloud components install gke-gcloud-auth-plugin
        gcloud container clusters get-credentials ${{ env.GCP_PROJECT }}-cluster --region ${{ env.GKE_CLUSTER_ZONE }} --project ${{ env.GCP_PROJECT }}

    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Deploy helm chart to cluster
      run: |
        helm upgrade timelord ./helm-chart/timelord \
        --atomic \
        --cleanup-on-fail \
        --install \
        --namespace timelord \
        --create-namespace \
        --set timelord.secret=${{ secrets.TIMELORD_SECRET }} \
        --set image.tag=${{ env.RELEASE_TAG }}
    needs: build
